version: '2.4'
volumes:
  pgdatavoting:
  mongodata:
  redisdata:
services:
  app:
    build:
      context: .
      target: dev
    depends_on:
      database:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      APP_URL: ${API_URL}
      APP_SECRET: ${APP_SECRET}
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      NODE_ENV: ${NODE_ENV}
    ports:
      - 3333:3333
      - 9229:9229
    volumes:
      - ./:/app
  database:
    image: postgres:12.3
    restart: on-failure
    healthcheck:
      test: pg_isready -h 127.0.0.1
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - '5432:5432'
    volumes:
      - pgdatavoting:/var/lib/postgresql/data
  mongo:
    image: mongo
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - '27017:27017'
    restart: on-failure
    volumes:
      - mongodata:/data/db
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redisdata:/data
